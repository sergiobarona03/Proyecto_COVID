grupo_3 =dataset_sim[dataset_sim$`Grupos  GABAS` == grupos[3],]
kable(grupo_3, caption = "Grupo 3: Cereales, raíces, tubérculos y plátanos")
```
```{r}
keep = c("Cod_TCAC", "Grupo GABAS", "Alimento", "Alimento_TCAC")
grupo_4 =dataset_sim[dataset_sim$`Grupos  GABAS` == grupos[4],]
kable(grupo_4, caption = "Grupo 4: Frutas y verduras")
```
```{r}
keep = c("Cod_TCAC", "Grupo GABAS", "Alimento", "Alimento_TCAC")
grupo_5 =dataset_sim[dataset_sim$`Grupos  GABAS` == grupos[5],]
kable(grupo_5, caption = "Grupo 5: Grasas")
```
```{r}
keep = c("Cod_TCAC", "Grupo GABAS", "Alimento", "Alimento_TCAC")
grupo_6 =dataset_sim[dataset_sim$`Grupos  GABAS` == grupos[6],]
kable(grupo_6, caption = "Grupo 6: Leche y productos lácteos")
```
dataset_sim$`Grupos  GABAS` = as.character(dataset_sim$`Grupos  GABAS`)
dataset_sim$`Grupos  GABAS` = as.factor(dataset_sim$`Grupos  GABAS`)
grupos = levels(dataset_sim$`Grupos  GABAS`)
keep = c("Cod_TCAC", "Grupo GABAS", "Alimento", "Alimento_TCAC")
grupo_1 =dataset_sim[dataset_sim$`Grupos  GABAS` == grupos[1],]
kable(grupo_1, caption = "Grupo 1: Azúcares")
keep = c("Cod_TCAC", "Grupo GABAS", "Alimento", "Alimento_TCAC")
grupo_2 =dataset_sim[dataset_sim$`Grupos  GABAS` == grupos[2],]
grupo_2 = grupo_2[keep]
keep = c("Cod_TCAC", "Grupo GABAS", "Alimento", "Alimento_TCAC")
grupo_2 =dataset_sim[dataset_sim$`Grupos  GABAS` == grupos[2],]
keep = c("Cod_TCAC", "Grupo GABAS", "Alimento", "Alimento_TCAC")
grupo_1 =dataset_sim[dataset_sim$`Grupos  GABAS` == grupos[1],]
grupo_1 = grupo_1[keep]
grupo_1 = grupo_1[keep,]
kable(grupo_1, caption = "Grupo 1: Azúcares")
grupo_1 =dataset_sim[dataset_sim$`Grupos  GABAS` == grupos[1],]
keep = c("Cod_TCAC", "Grupo  GABAS", "Alimento", "Alimento_TCAC")
grupo_1 =dataset_sim[dataset_sim$`Grupos  GABAS` == grupos[1],]
grupo_1 = grupo_1[keep]
colnames(grupo_2)
keep = c("Cod_TCAC", "Grupos  GABAS", "Alimento", "Alimento_TCAC")
grupo_1 =dataset_sim[dataset_sim$`Grupos  GABAS` == grupos[1],]
grupo_1 = grupo_1[keep]
kable(grupo_1, caption = "Grupo 1: Azúcares")
grupo_2 =dataset_sim[dataset_sim$`Grupos  GABAS` == grupos[2],]
grupo_2 = grupo_2[keep]
kable(grupo_2, caption = "Grupo 2: Carnes, huevos, leguminosas secas, frutos secos y semillas")
grupo_3 =dataset_sim[dataset_sim$`Grupos  GABAS` == grupos[3],]
grupo_3 = grupo_3[keep]
kable(grupo_3, caption = "Grupo 3: Cereales, raíces, tubérculos y plátanos")
grupo_4 =dataset_sim[dataset_sim$`Grupos  GABAS` == grupos[4],]
grupo_4 = grupo_4[keep]
kable(grupo_4, caption = "Grupo 4: Frutas y verduras")
grupo_5 =dataset_sim[dataset_sim$`Grupos  GABAS` == grupos[5],]
grupo_5 = grupo_5[keep]
kable(grupo_5, caption = "Grupo 5: Grasas")
grupo_6 =dataset_sim[dataset_sim$`Grupos  GABAS` == grupos[6],]
grupo_6 = grupo_6[keep]
kable(grupo_6, caption = "Grupo 6: Leche y productos lácteos")
datos_sim_grupos = rbind(grupo_1, grupo_2, grupo_3, grupo_4, grupo_5, grupo_6)
View(datos_sim_grupos)
writexl::write_xlsx(datos_sim_grupos, "D:\\Desktop\\Simulacion_semana_4\\Datos_simiulacion_grupos.xlsx")
writexl::write_xlsx(datos_sim_grupos, "D:\\Desktop\\Simulacion_semana_4\\Datos_simulacion_grupos.xlsx")
# filtrar para Cali
censo_per_cali = filter(censo_per, U_MPIO == "1")
library(survival)
library(KMsurv)
library(survMisc)
library(survminer)
library(flexsurv)
setwd("D:/Desktop/Proyecto_COVID")
dataset = read.csv("Resultados/04.01.23/final_cov_040123.csv")
flexsurvreg(Surv(t, d) ~ 1, data = dataset, dist = "gengamma.orig")
# Nueva propuesta
model_gamma <- dataset %>% group_by(Sexo) %>% do(flex = flexsurvreg(Surv(Tiempo, Censura) ~ 1, data = ., dist = "GenGamma.orig"))
library(survival)
library(KMsurv)
library(survMisc)
library(survminer)
library(ggfortify)
library(flexsurv)
library(actuar)
library(tidyverse)
library(dplyr)
library(ggplot2)
library(readxl)
library(xts)
library(plyr)
library(dplyr)
library(writexl)
library(knitr)
library(moments)
library(fitdistrplus)
library(logspline)
# Nueva propuesta
model_gamma <- dataset %>% group_by(Sexo) %>% do(flex = flexsurvreg(Surv(Tiempo, Censura) ~ 1, data = ., dist = "GenGamma.orig"))
# Nueva propuesta
colnames(dataset) = c("Caso", "Tiempo", "Censura", "Edad", "Sexo")
model_gamma <- dataset %>% group_by(Sexo) %>% do(flex = flexsurvreg(Surv(Tiempo, Censura) ~ 1, data = ., dist = "GenGamma.orig"))
df_km_sexo <-  survfit(Surv(Tiempo, Censura) ~ Sexo, data = dataset)
plot(df_km_sexo,  main = "Figura 9: Estimación paramétrica (distribución gamma generalizada) y no-paramétrica de las curvas de supervivencia diferenciadas según el sexo", xlab = "Tiempo",
ylab = "Probabilidad de Supervivencia", col = c("black", "black"))
lines(model_gamma$flex[[1]], ci = FALSE,   col = "red")
lines(model_gamma$flex[[2]], ci = FALSE,   col = "green")
text(locator(), labels = c("red line", "green line)"))
text(locator(), labels = "F")
# Nueva propuesta
colnames(dataset) = c("Caso", "Tiempo", "Censura", "Edad", "Sexo")
model_gamma <- dataset %>% group_by(Sexo) %>% do(flex = flexsurvreg(Surv(Tiempo, Censura) ~ 1, data = ., dist = "GenGamma.orig"))
df_km_sexo <-  survfit(Surv(Tiempo, Censura) ~ Sexo, data = dataset)
plot(df_km_sexo,  main = "Figura 9: Estimación paramétrica (distribución gamma generalizada) y no-paramétrica de las curvas de supervivencia diferenciadas según el sexo", xlab = "Tiempo",
ylab = "Probabilidad de Supervivencia", col = c("black", "black"))
lines(model_gamma$flex[[1]], ci = FALSE,   col = "red")
lines(model_gamma$flex[[2]], ci = FALSE,   col = "green")
text(locator(), labels = "F")
library(survival)
library(KMsurv)
library(survMisc)
library(survminer)
library(ggfortify)
library(flexsurv)
library(actuar)
library(tidyverse)
library(dplyr)
library(ggplot2)
library(readxl)
library(xts)
library(plyr)
library(dplyr)
library(writexl)
library(knitr)
library(moments)
library(fitdistrplus)
library(logspline)
setwd("D:/Desktop/Proyecto_COVID")
dataset = read.csv("Resultados/04.01.23/final_cov_040123.csv")
kable(dataset[c(1:10),], col.names = c("Caso", "Tiempo", "Censura", "Edad", "Sexo"),
caption = "Tabla 1: Estructura general de la base de datos sobre el tiempo de permanencia en UCI para Cali, Valle del Cauca. Fuente: INS (2020,2021)")
colnames(dataset) =  c("Caso", "Tiempo", "Censura", "Edad", "Sexo")
df_km <- survfit(Surv(dataset$Tiempo, dataset$Censura) ~ 1, data = dataset, type = "kaplan-meier", error = "tsiatis", conf.type = "log-log", conf.int = 0.95)
resultados_1 = with(df_km, data.frame(time, n.risk, n.event, surv, std.err, lower, upper))[1:10,]
colnames(resultados_1) = c("time", "n.risk", "n.event", "surv", "std.err", "lower 95% CI",
"upper 95% CI")
kable(resultados_1, caption = "Tabla 2: Estimación no-paramétrica de la función de supervivencia")
ggsurvplot(fit = df_km, data = dataset, conf.int = T, xlab = "Tiempo", ylab = "Probabilidad de supervivencia", legend.labs = "Estimación de Kaplan-Meier", title = "Figura 1: Estimación no-paramétrica de la curva de supervivencia sin covariables", legend.title = " ")
df_km_sexo <- survfit(Surv(dataset$Tiempo, dataset$Censura) ~ Sexo, data = dataset, type = "kaplan-meier", error = "tsiatis", conf.type = "log-log", conf.int = 0.99)
resultados_2 = with(df_km_sexo[1], data.frame(time, n.risk, n.event, surv, std.err, lower, upper))[1:10,]
colnames(resultados_2) = c("time", "n.risk", "n.event", "surv", "std.err", "lower 95% CI", "upper 95% CI")
kable(resultados_2, caption = "Tabla 3A: Estimación no-paramétrica de la curva de supervivencia para pacientes de sexo masculino")
resultados_3 = with(df_km_sexo[2], data.frame(time, n.risk, n.event, surv, std.err, lower, upper))[1:10,]
colnames(resultados_3) = c("time", "n.risk", "n.event", "surv", "std.err", "lower 95% CI", "upper 95% CI")
kable(resultados_3, caption = "Tabla 3B: Estimación no-paramétrica de la curva de supervivencia para pacientes de sexo femenino")
ggsurvplot(fit = df_km_sexo, data = dataset, conf.int = T, title = "Figura 2: Estimación no-paramétrica de la curva de Supervivencia diferenciada según sexo", xlab = "Tiempo", ylab = "Probabilidad de supervivencia", legend.title = "Sexo", legend.labs = c("M", "F"))
survdiff(Surv(dataset$Tiempo, dataset$Censura) ~ Sexo, data = dataset, rho = 0)
dataset$Grupo_edad <- cut(dataset$Edad, breaks = c(0, 30, 60, 90))
df_km_edad <- survfit(Surv(dataset$Tiempo, dataset$Censura) ~ Grupo_edad, data = dataset, type = "kaplan-meier", error = "tsiatis", conf.type = "log-log", conf.int = 0.95)
resultados_4 = with(df_km_edad[1], data.frame(time, n.risk, n.event, surv, std.err, lower, upper))[1:10,]
colnames(resultados_4) = c("time", "n.risk", "n.event", "surv", "std.err", "lower 95% CI", "upper 95% CI")
kable(resultados_4, caption = "Tabla 4: Estimación no-paramétrica de la curva de supervivencia para pacientes de entre 0 y 30 años")
resultados_5 = with(df_km_edad[2], data.frame(time, n.risk, n.event, surv, std.err, lower, upper))[1:10,]
colnames(resultados_5) = c("time", "n.risk", "n.event", "surv", "std.err", "lower 95% CI", "upper 95% CI")
kable(resultados_5, caption = "Tabla 5: Estimación no-paramétrica de la curva de supervivencia para pacientes de entre 30 y 60 años")
resultados_6 = with(df_km_edad[3], data.frame(time, n.risk, n.event, surv, std.err, lower, upper))[1:10,]
colnames(resultados_6) = c("time", "n.risk", "n.event", "surv", "std.err", "lower 95% CI", "upper 95% CI")
kable(resultados_6, caption = "Tabla 6: Estimación no-paramétrica de la curva de supervivencia para pacientes de 60 años o más")
ggsurvplot(fit = df_km_edad, data = dataset, conf.int = T, title = "Figura 3: Estimación no-paramétrica de la curva de Supervivencia diferenciada según grupos etarios", xlab = "Tiempo", ylab = "Probabilidad de supervivencia", legend.title = "Estimación", xlim = c(0, 180), legend.labs = c("(0, 30]", "(30, 60]", ">60"))
survdiff(Surv(dataset$Tiempo, dataset$Censura) ~ Grupo_edad, data = dataset, rho = 0)
hazard_f <- df_km %>% fortify %>% mutate(CumHaz = cumsum(n.event/n.risk))
plot(df_km, fun = "cumhaz", conf.int = F, main = "Figura 4: Función de riesgo acumulado estimada sin covariables", col = 1:2, xlab = "Tiempo (Días)", ylab = "Riesgo Acumulado", xlim = c(0,200))
hazard_f <- df_km_sexo %>% fortify %>% mutate(CumHaz = cumsum(n.event/n.risk))
ggsurvplot(df_km_sexo, fun = "cumhaz", xlab = "Tiempo (Días)", censor = T, ylab = "Riesgo Acumulado", title = "Figura 5: Estimación de funciones de riesgo acumulado diferenciadas según el sexo", legend.title = "Sexo", legend.labs = c("M", "F"), xlim = c(0, 180))
hazard_f <- df_km_edad %>% fortify %>% mutate(CumHaz = cumsum(n.event/n.risk))
ggsurvplot(df_km_edad, fun = "cumhaz", xlab = "Tiempo (Días)", censor = T, ylab = "Riesgo Acumulado", title = "Figura 6: Estimación de funciones de riesgo acumulado diferenciadas según grupos etarios", legend.title = "Grupos etarios", legend.labs = c("(0, 30]", "(30, 60]", ">60"))
colnames(dataset) = c("Caso", "Tiempo", "Censura", "Edad", "Sexo", "Grupo_edad")
dataset$Censura = as.factor(dataset$Censura)
dataset$Sexo = as.factor(dataset$Sexo)
kable(summary(dataset[c("Tiempo", "Edad", "Censura", "Sexo")]), caption = "Tabla 7: Descripción de la variables y covariables de interés")
ggplot(dataset, aes(x=Tiempo)) + geom_histogram(aes(y=..density..),
colour = "black",
fill = "white", bins = 35) + geom_density(alpha=0.4, fill = "#FF6666") + labs(title = "Figura 5: Densidad empírica del tiempo de permanencia en UCI para pacientes de COVID-19")
sk <- data.frame(skewness(dataset$Tiempo), kurtosis(dataset$Tiempo))
colnames(sk) <- c("Skewness", "Kurtosis")
kable(sk, Caption= "Tabla 8: medida de asimetría (skewness) y curtosis de la distribución")
descdist(dataset$Tiempo, discrete = FALSE)
par(mfrow = c(2,2))
plot_legend <- c("Gamma", "Weibull", "Log-Normal")
denscomp(list(fitdist(dataset$Tiempo, "gamma"), fitdist(dataset$Tiempo, "weibull"), fitdist(dataset$Tiempo, "lnorm")), legendtext = c("Gamma", "Weibull", "Log-Normal"))
qqcomp(list(fitdist(dataset$Tiempo, "gamma"), fitdist(dataset$Tiempo, "weibull"), fitdist(dataset$Tiempo, "lnorm")), legendtext = c("Gamma", "Weibull", "Log-Normal"))
cdfcomp(list(fitdist(dataset$Tiempo, "gamma"), fitdist(dataset$Tiempo, "weibull"), fitdist(dataset$Tiempo, "lnorm")), legendtext = c("Gamma", "Weibull", "Log-Normal"))
ppcomp(list(fitdist(dataset$Tiempo, "gamma"), fitdist(dataset$Tiempo, "weibull"), fitdist(dataset$Tiempo, "lnorm")), legendtext = c("Gamma", "Weibull", "Log-Normal"))
par(mfrow = c(2,2))
denscomp(list(fit_loglogis <- fitdist(dataset$Tiempo, "llogis"), fitdist(dataset$Tiempo, distr = "gompertz", start = list(shape =1, rate = 1), lower = c(0,0))),
legendtext = c("Log-logística", "Gompertz"))
qqcomp(list(fit_loglogis <- fitdist(dataset$Tiempo, "llogis"), fitdist(dataset$Tiempo, distr = "gompertz", start = list(shape =1, rate = 1), lower = c(0,0))),
legendtext = c("Log-logística", "Gompertz"))
cdfcomp(list(fit_loglogis <- fitdist(dataset$Tiempo, "llogis"), fitdist(dataset$Tiempo, distr = "gompertz", start = list(shape =1, rate = 1), lower = c(0,0))),
legendtext = c("Log-logística", "Gompertz"))
ppcomp(list(fit_loglogis <- fitdist(dataset$Tiempo, "llogis"), fitdist(dataset$Tiempo, distr = "gompertz", start = list(shape =1, rate = 1), lower = c(0,0))),
legendtext = c("Log-logística", "Gompertz"))
ggsurvplot(fit = df_km_sexo, data = dataset, conf.int = T, title = "Figura 2: Estimación no-paramétrica de la curva de Supervivencia diferenciada según sexo", xlab = "Tiempo", ylab = "Probabilidad de supervivencia", legend.title = "Sexo", legend.labs = c("M", "F"))
model_gamma <- dataset %>% group_by(Sexo) %>% do(flex = flexsurvreg(Surv(Tiempo, Censura) ~ 1, data = ., dist = "GenGamma.orig"))
ggsurvplot(fit = df_km_sexo, data = dataset, conf.int = T, title = "Figura 2: Estimación no-paramétrica de la curva de Supervivencia diferenciada según sexo", xlab = "Tiempo", ylab = "Probabilidad de supervivencia", legend.title = "Sexo", legend.labs = c("M", "F"))
library(survival)
library(KMsurv)
library(survMisc)
library(survminer)
library(ggfortify)
library(flexsurv)
library(actuar)
library(tidyverse)
library(dplyr)
library(ggplot2)
library(readxl)
library(xts)
library(plyr)
library(dplyr)
library(writexl)
library(knitr)
library(moments)
library(fitdistrplus)
library(logspline)
setwd("D:/Desktop/Proyecto_COVID")
dataset = read.csv("Resultados/04.01.23/final_cov_040123.csv")
kable(dataset[c(1:10),], col.names = c("Caso", "Tiempo", "Censura", "Edad", "Sexo"),
caption = "Tabla 1: Estructura general de la base de datos sobre el tiempo de permanencia en UCI para Cali, Valle del Cauca. Fuente: INS (2020,2021)")
colnames(dataset) =  c("Caso", "Tiempo", "Censura", "Edad", "Sexo")
df_km <- survfit(Surv(dataset$Tiempo, dataset$Censura) ~ 1, data = dataset, type = "kaplan-meier", error = "tsiatis", conf.type = "log-log", conf.int = 0.95)
resultados_1 = with(df_km, data.frame(time, n.risk, n.event, surv, std.err, lower, upper))[1:10,]
colnames(resultados_1) = c("time", "n.risk", "n.event", "surv", "std.err", "lower 95% CI",
"upper 95% CI")
kable(resultados_1, caption = "Tabla 2: Estimación no-paramétrica de la función de supervivencia")
ggsurvplot(fit = df_km, data = dataset, conf.int = T, xlab = "Tiempo", ylab = "Probabilidad de supervivencia", legend.labs = "Estimación de Kaplan-Meier", title = "Figura 1: Estimación no-paramétrica de la curva de supervivencia sin covariables", legend.title = " ")
df_km_sexo <- survfit(Surv(dataset$Tiempo, dataset$Censura) ~ Sexo, data = dataset, type = "kaplan-meier", error = "tsiatis", conf.type = "log-log", conf.int = 0.99)
resultados_2 = with(df_km_sexo[1], data.frame(time, n.risk, n.event, surv, std.err, lower, upper))[1:10,]
colnames(resultados_2) = c("time", "n.risk", "n.event", "surv", "std.err", "lower 95% CI", "upper 95% CI")
kable(resultados_2, caption = "Tabla 3A: Estimación no-paramétrica de la curva de supervivencia para pacientes de sexo masculino")
resultados_3 = with(df_km_sexo[2], data.frame(time, n.risk, n.event, surv, std.err, lower, upper))[1:10,]
colnames(resultados_3) = c("time", "n.risk", "n.event", "surv", "std.err", "lower 95% CI", "upper 95% CI")
kable(resultados_3, caption = "Tabla 3B: Estimación no-paramétrica de la curva de supervivencia para pacientes de sexo femenino")
ggsurvplot(fit = df_km_sexo, data = dataset, conf.int = T, title = "Figura 2: Estimación no-paramétrica de la curva de Supervivencia diferenciada según sexo", xlab = "Tiempo", ylab = "Probabilidad de supervivencia", legend.title = "Sexo", legend.labs = c("M", "F"))
survdiff(Surv(dataset$Tiempo, dataset$Censura) ~ Sexo, data = dataset, rho = 0)
dataset$Grupo_edad <- cut(dataset$Edad, breaks = c(0, 30, 60, 90))
df_km_edad <- survfit(Surv(dataset$Tiempo, dataset$Censura) ~ Grupo_edad, data = dataset, type = "kaplan-meier", error = "tsiatis", conf.type = "log-log", conf.int = 0.95)
resultados_4 = with(df_km_edad[1], data.frame(time, n.risk, n.event, surv, std.err, lower, upper))[1:10,]
colnames(resultados_4) = c("time", "n.risk", "n.event", "surv", "std.err", "lower 95% CI", "upper 95% CI")
kable(resultados_4, caption = "Tabla 4: Estimación no-paramétrica de la curva de supervivencia para pacientes de entre 0 y 30 años")
resultados_5 = with(df_km_edad[2], data.frame(time, n.risk, n.event, surv, std.err, lower, upper))[1:10,]
colnames(resultados_5) = c("time", "n.risk", "n.event", "surv", "std.err", "lower 95% CI", "upper 95% CI")
kable(resultados_5, caption = "Tabla 5: Estimación no-paramétrica de la curva de supervivencia para pacientes de entre 30 y 60 años")
resultados_6 = with(df_km_edad[3], data.frame(time, n.risk, n.event, surv, std.err, lower, upper))[1:10,]
colnames(resultados_6) = c("time", "n.risk", "n.event", "surv", "std.err", "lower 95% CI", "upper 95% CI")
kable(resultados_6, caption = "Tabla 6: Estimación no-paramétrica de la curva de supervivencia para pacientes de 60 años o más")
ggsurvplot(fit = df_km_edad, data = dataset, conf.int = T, title = "Figura 3: Estimación no-paramétrica de la curva de Supervivencia diferenciada según grupos etarios", xlab = "Tiempo", ylab = "Probabilidad de supervivencia", legend.title = "Estimación", xlim = c(0, 180), legend.labs = c("(0, 30]", "(30, 60]", ">60"))
survdiff(Surv(dataset$Tiempo, dataset$Censura) ~ Grupo_edad, data = dataset, rho = 0)
hazard_f <- df_km %>% fortify %>% mutate(CumHaz = cumsum(n.event/n.risk))
plot(df_km, fun = "cumhaz", conf.int = F, main = "Figura 4: Función de riesgo acumulado estimada sin covariables", col = 1:2, xlab = "Tiempo (Días)", ylab = "Riesgo Acumulado", xlim = c(0,200))
hazard_f <- df_km_sexo %>% fortify %>% mutate(CumHaz = cumsum(n.event/n.risk))
ggsurvplot(df_km_sexo, fun = "cumhaz", xlab = "Tiempo (Días)", censor = T, ylab = "Riesgo Acumulado", title = "Figura 5: Estimación de funciones de riesgo acumulado diferenciadas según el sexo", legend.title = "Sexo", legend.labs = c("M", "F"), xlim = c(0, 180))
hazard_f <- df_km_edad %>% fortify %>% mutate(CumHaz = cumsum(n.event/n.risk))
ggsurvplot(df_km_edad, fun = "cumhaz", xlab = "Tiempo (Días)", censor = T, ylab = "Riesgo Acumulado", title = "Figura 6: Estimación de funciones de riesgo acumulado diferenciadas según grupos etarios", legend.title = "Grupos etarios", legend.labs = c("(0, 30]", "(30, 60]", ">60"))
colnames(dataset) = c("Caso", "Tiempo", "Censura", "Edad", "Sexo", "Grupo_edad")
dataset$Censura = as.factor(dataset$Censura)
dataset$Sexo = as.factor(dataset$Sexo)
kable(summary(dataset[c("Tiempo", "Edad", "Censura", "Sexo")]), caption = "Tabla 7: Descripción de la variables y covariables de interés")
ggplot(dataset, aes(x=Tiempo)) + geom_histogram(aes(y=..density..),
colour = "black",
fill = "white", bins = 35) + geom_density(alpha=0.4, fill = "#FF6666") + labs(title = "Figura 5: Densidad empírica del tiempo de permanencia en UCI para pacientes de COVID-19")
sk <- data.frame(skewness(dataset$Tiempo), kurtosis(dataset$Tiempo))
colnames(sk) <- c("Skewness", "Kurtosis")
kable(sk, Caption= "Tabla 8: medida de asimetría (skewness) y curtosis de la distribución")
descdist(dataset$Tiempo, discrete = FALSE)
par(mfrow = c(2,2))
plot_legend <- c("Gamma", "Weibull", "Log-Normal")
denscomp(list(fitdist(dataset$Tiempo, "gamma"), fitdist(dataset$Tiempo, "weibull"), fitdist(dataset$Tiempo, "lnorm")), legendtext = c("Gamma", "Weibull", "Log-Normal"))
qqcomp(list(fitdist(dataset$Tiempo, "gamma"), fitdist(dataset$Tiempo, "weibull"), fitdist(dataset$Tiempo, "lnorm")), legendtext = c("Gamma", "Weibull", "Log-Normal"))
cdfcomp(list(fitdist(dataset$Tiempo, "gamma"), fitdist(dataset$Tiempo, "weibull"), fitdist(dataset$Tiempo, "lnorm")), legendtext = c("Gamma", "Weibull", "Log-Normal"))
ppcomp(list(fitdist(dataset$Tiempo, "gamma"), fitdist(dataset$Tiempo, "weibull"), fitdist(dataset$Tiempo, "lnorm")), legendtext = c("Gamma", "Weibull", "Log-Normal"))
par(mfrow = c(2,2))
denscomp(list(fit_loglogis <- fitdist(dataset$Tiempo, "llogis"), fitdist(dataset$Tiempo, distr = "gompertz", start = list(shape =1, rate = 1), lower = c(0,0))),
legendtext = c("Log-logística", "Gompertz"))
qqcomp(list(fit_loglogis <- fitdist(dataset$Tiempo, "llogis"), fitdist(dataset$Tiempo, distr = "gompertz", start = list(shape =1, rate = 1), lower = c(0,0))),
legendtext = c("Log-logística", "Gompertz"))
cdfcomp(list(fit_loglogis <- fitdist(dataset$Tiempo, "llogis"), fitdist(dataset$Tiempo, distr = "gompertz", start = list(shape =1, rate = 1), lower = c(0,0))),
legendtext = c("Log-logística", "Gompertz"))
ppcomp(list(fit_loglogis <- fitdist(dataset$Tiempo, "llogis"), fitdist(dataset$Tiempo, distr = "gompertz", start = list(shape =1, rate = 1), lower = c(0,0))),
legendtext = c("Log-logística", "Gompertz"))
colnames(dataset) = c("Caso", "Tiempo", "Censura", "Edad", "Sexo", "Grupo_edad")
dataset$Censura = as.numeric(dataset$Censura)
flexg_gamma <- flexsurvreg(Surv(Tiempo, Censura) ~ 1, data = dataset, dist = "GenGamma.orig") %>% summary(type = "survival") %>% data.frame
non_par <- survfit(Surv(Tiempo, Censura) ~ 1, data = dataset) %>% fortify
ggplot() + geom_line(aes(time, est, col = "Paramétrico (Gamma generalizada)"),
data = flexg_gamma) + geom_step(aes(time,
surv, col = "No Paramétrico"), data =non_par) + labs(x = "Tiempo (Días)",
y = "Probabilidad de Supervivencia", col = "Ajustes",
title = "Figura 7: Estimación paramétrica y no-paramétrica de la función de supervivencia")
ggplot() + geom_line(aes(time, -log(est), col = "Paramétrico (Gamma generalizada)"), data = flexg_gamma) + geom_step(aes(time, -log(surv), col = "No-paramétrico"), data = non_par) +
labs(x = "Tiempo (Días)",
y = "Riesgo Acumulado", col = "Ajustes", title = "Figura 8: Estimación paramétrica y no-paramétrica de la función de riesgo acumulado")
media <- c(as.numeric(sub(".*:", "", summary(flexg_gamma)[4])))
mediana <- c(as.numeric(sub(".*:", "", summary(flexg_gamma)[3])))
first <- c(" ")
med_med <- data.frame(first, media, mediana)
colnames(med_med) <- c("", "Media", "Mediana" )
kable(med_med, caption = "Tabla 9: tiempo medio y tiempo mediano de supervivencia")
ggsurvplot(fit = df_km_sexo, data = dataset, conf.int = T, title = "Figura 2: Estimación no-paramétrica de la curva de Supervivencia diferenciada según sexo", xlab = "Tiempo", ylab = "Probabilidad de supervivencia", legend.title = "Sexo", legend.labs = c("M", "F"))
model_gamma <- dataset %>% group_by(Sexo) %>% do(flex = flexsurvreg(Surv(Tiempo, Censura) ~ 1, data = ., dist = "GenGamma.orig"))
df_km_sexo <-  survfit(Surv(Tiempo, Censura) ~ Sexo, data = dataset)
plot(df_km_sexo,  main = "Figura 9: Estimación paramétrica (distribución gamma generalizada) y no-paramétrica de las curvas de supervivencia diferenciadas según el sexo", xlab = "Tiempo",
ylab = "Probabilidad de Supervivencia", col = c("red", "green"))
lines(model_gamma$flex[[1]], ci = FALSE,   col = "red")
lines(model_gamma$flex[[2]], ci = FALSE,   col = "green")
model_gamma <- dataset %>% group_by(Sexo) %>% do(flex = flexsurvreg(Surv(Tiempo, Censura) ~ 1, data = ., dist = "GenGamma.orig"))
df_km_sexo <-  survfit(Surv(Tiempo, Censura) ~ Sexo, data = dataset)
plot(df_km_sexo,  main = "Figura 9: Estimación paramétrica (distribución gamma generalizada) y no-paramétrica de las curvas de supervivencia diferenciadas según el sexo", xlab = "Tiempo",
ylab = "Probabilidad de Supervivencia", col = c("red", "green"))
lines(model_gamma$flex[[1]], ci = FALSE,   col = "red")
lines(model_gamma$flex[[2]], ci = FALSE,   col = "green")
ggsurvplot(fit = df_km_sexo, data = dataset, conf.int = T, title = "Figura 2: Estimación no-paramétrica de la curva de Supervivencia diferenciada según sexo", xlab = "Tiempo", ylab = "Probabilidad de supervivencia", legend.title = "Sexo", legend.labs = c("M", "F"))
model_gamma$flex[[1]]$N
model_gamma$flex[[2]]$N
count(dataset, Sexo)
count(Sexo, dataset)
count(dataset, "Sexo")
flexg_loglogis <- flexsurvreg(Surv(t, d) ~ 1, data = df, dist = "llogis") %>%
summary(type = "survival") %>% data.frame
flexg_loglogis <- flexsurvreg(Surv(Tiempo, Censura) ~ 1, data = dataset, dist = "llogis") %>%
summary(type = "survival") %>% data.frame
ggplot() + geom_line(aes(time, est, col = "Paramétrico (Log-logística)"),
data = flexg_loglogis) + geom_step(aes(time,
surv, col = "No-paramétrico"),
data =non_par) + labs(x = "Tiempo (Días)",
y = "Probabilidad de Supervivencia", col = "Ajustes",
title = "Comparación entre curvas de supervivencia")
ggplot() + geom_line(aes(time, -log(est), col = "Paramétrico (Log-logística)"), data = flexg_loglogis) +
geom_step(aes(time, -log(surv), col = "No-paramétrico"), data = non_par) +
labs(x = "Tiempo (Días)", y = "Riesgo Acumulado", col = "Ajustes",
title = "Comparación entre funciones de riesgo acumulado")
plot(df_km_sexo, main = "Figura 13: Estimación paramétrica (distribución log-logística) y no-paramétrica de las curvas de supervivencia diferenciadas según el sexo", xlab = "Tiempo",
ylab = "Probabilidad de Supervivencia", col = c("red", "blue"))
plot(df_km_sexo, main = "Figura 13: Estimación paramétrica (distribución log-logística) y no-paramétrica de las curvas de supervivencia diferenciadas según el sexo", xlab = "Tiempo",
ylab = "Probabilidad de Supervivencia", col = c("red", "light blue"))
plot(df_km_sexo, main = "Figura 13: Estimación paramétrica (distribución log-logística) y no-paramétrica de las curvas de supervivencia diferenciadas según el sexo", xlab = "Tiempo",
ylab = "Probabilidad de Supervivencia", col = c("red", "lightblue"))
lines(model_logis$flex[[2]], ci = FALSE,  col = "lightblue")
lines(model_logis$flex[[1]], ci = FALSE,  col = "red")
model_logis <- dataset %>% group_by(Sexo) %>% do(flex = flexsurvreg(Surv(Tiempo, Censura) ~ 1, data = ., dist = "llogis"))
plot(df_km_sexo, main = "Figura 13: Estimación paramétrica (distribución log-logística) y no-paramétrica de las curvas de supervivencia diferenciadas según el sexo", xlab = "Tiempo",
ylab = "Probabilidad de Supervivencia", col = c("red", "lightblue"))
lines(model_logis$flex[[1]], ci = FALSE,  col = "red")
lines(model_logis$flex[[2]], ci = FALSE,  col = "lightblue")
model_logis <- dataset %>% group_by(Sexo) %>% do(flex = flexsurvreg(Surv(Tiempo, Censura) ~ 1, data = ., dist = "llogis"))
plot(df_km_sexo, main = "Figura 13: Estimación paramétrica (distribución log-logística) y no-paramétrica de las curvas de supervivencia diferenciadas según el sexo", xlab = "Tiempo",
ylab = "Probabilidad de Supervivencia", col = c("red", "deepskyblue"))
lines(model_logis$flex[[1]], ci = FALSE,  col = "red")
lines(model_logis$flex[[2]], ci = FALSE,  col = "deepskyblue")
plot(df_km_sexo, main = "Figura 14: Estimación paramétrica (distribución log-logística) y no-paramétrica de las funciones de riesgo acumulado diferenciadas según el sexo", xlab = "Tiempo",
ylab = "Riesgo Acumulado", fun = "cumhaz", col = c("red", "deepskyblue"))
lines(model_logis$flex[[1]], ci = F,  type = "cumhaz", col ="red")
lines(model_logis$flex[[2]], ci = F,  type = "cumhaz", col = "deepskyblue")
model_gompertz <- dataset %>% group_by(Sexo) %>% do(flex = flexsurvreg(Surv(Tiempo, Censura) ~ 1, data = ., dist = "gompertz"))
plot(df_km_sexo, main = "Figura 17: Estimación paramétrica (distribución de Gompertz) y \ estimación no-paramétrica de las curvas de supervivencia diferenciadas según el sexo", xlab = "Tiempo",
ylab = "Probabilidad de Supervivencia", col = c("red", "deepskyblue"))
lines(model_gompertz$flex[[1]], ci = FALSE,  col = "red")
lines(model_gompertz$flex[[2]], ci = FALSE,  col = "deepskyblue")
model_gompertz <- dataset %>% group_by(Sexo) %>% do(flex = flexsurvreg(Surv(Tiempo, Censura) ~ 1, data = ., dist = "gompertz"))
plot(df_km_sexo, main = "Figura 17: Estimación paramétrica (distribución de Gompertz) y \estimación no-paramétrica de las curvas de supervivencia diferenciadas según el sexo", xlab = "Tiempo",
plot(df_km_sexo, main = "Figura 17: Estimación paramétrica (distribución de Gompertz) y \nestimación no-paramétrica de las curvas de supervivencia diferenciadas según el sexo", xlab = "Tiempo",
ylab = "Probabilidad de Supervivencia", col = c("red", "deepskyblue"))
datosflex <- new_df_cov %>% filter(Grupo_edad == "(0,30]")
datosflex <- dataset %>% filter(Grupo_edad == "(0,30]")
dist <- c("GenGamma.orig", "llogis", "gompertz")
data.Surv <- Surv(datosflex$Tiempo, datosflex$Censura)
modelo_g1 <- sapply(dist, function(x) flexsurvreg(data.Surv ~ 1, dist = x), USE.NAMES = T, simplify = F)
AIC_modelo_g1 <- sapply(modelo_g1, function(x) c(AIC = AIC(x), BIC = BIC(x), LogLik = x$loglik), simplify = T)
AIC_modelo_g1[, order(AIC_modelo_g1["AIC", ])]
datosflex <- dataset %>% filter(Grupo_edad == "(0,30]")
dist <- c("GenGamma.orig", "llogis", "gompertz")
data.Surv <- Surv(datosflex$Tiempo, datosflex$Censura)
modelo_g1 <- sapply(dist, function(x) flexsurvreg(data.Surv ~ 1, dist = x), USE.NAMES = T, simplify = F)
AIC_modelo_g1 <- sapply(modelo_g1, function(x) c(AIC = AIC(x), BIC = BIC(x), LogLik = x$loglik), simplify = T)
AIC = AIC_modelo_g1[, order(AIC_modelo_g1["AIC", ])]
kable(AIC, caption = "Tabla 10: Criterios de información")
datosflex <- dataset %>% filter(Grupo_edad == "(0,30]")
dist <- c("GenGamma.orig", "llogis", "gompertz")
data.Surv <- Surv(datosflex$Tiempo, datosflex$Censura)
modelo_g1 <- sapply(dist, function(x) flexsurvreg(data.Surv ~ 1, dist = x), USE.NAMES = T, simplify = F)
AIC_modelo_g1 <- sapply(modelo_g1, function(x) c(AIC = AIC(x), BIC = BIC(x), LogLik = x$loglik), simplify = T)
AIC = AIC_modelo_g1[, order(AIC_modelo_g1["AIC", ])]
kable(AIC, caption = "Tabla 10: Criterios de información",
col.names = c("Gamma generalizada", "Gompertz", "Log-Logística"))
flex_g1 <- flexsurvreg(Surv(Tiempo, Censura) ~ 1, data = dataset, dist = "GenGamma.orig")
f_est_g1 <- 1 - as.data.frame(summary(flex_g1))[, "est"]
km_est_g1 <- survfit(Surv(t, d) ~ 1, datosflex)
flex_g1 <- flexsurvreg(Surv(Tiempo, Censura) ~ 1, data = dataset, dist = "GenGamma.orig")
f_est_g1 <- 1 - as.data.frame(summary(flex_g1))[, "est"]
km_est_g1 <- survfit(Surv(Tiempo, Censura) ~ 1, dataset)
km_est_g1 <- 1 - km_est_g1$surv
qplot((2/pi) * asin(sqrt(km_est_g1)), (2/pi) * asin(sqrt(f_est_g1))) + labs(x = "F-km-stab",
y = "F-emv-stab", title = "Gráfica de probabilidad estabilizada")
flex_g1 <- flexsurvreg(Surv(t, d) ~ 1, data = datosflex, dist = "GenGamma.orig") %>% summary(type = "survival") %>% data.frame
flex_g1 <- flexsurvreg(Surv(Tiempo, Censura) ~ 1, data = dataset, dist = "GenGamma.orig") %>% summary(type = "survival") %>% data.frame
km_g1 <- survfit(Surv(Tiempo, Censura) ~ 1, data = dataset) %>% fortify
ggplot() + geom_line(aes(time, est, col = "Paramétrico (gamma generalizada)"), data = flex_g1) + geom_step(aes(time,
surv, col = "No-paramétrico"), data = km_g1) + labs(x = "Tiempo (Días)",
y = "Probabilidad de Supervivencia", col = "Ajustes", title = "Estimación paramétrico y no-paramétrica de la curva de supervivencia", subtitle = "Pacientes de entre 0 y 30 años")
ggplot() + geom_line(aes(time, -log(est), col = "Paramétrico (gamma generalizada)"), data = flex_g1) +
geom_step(aes(time, -log(surv), col = "No-paramétrico"), data = km_g1) +
labs(x = "Tiempo (Días)", y = "Riesgo Acumulado", col = "Ajustes",
title = "Figura 21: Estimación paramétrica y no-paramétrica de la función de riesgo acumulado",
subtitle = "Pacientes de entre 0 y 30 años")
datosflex <- dataset %>% filter(Grupo_edad == "(0,30]")
dist <- c("GenGamma.orig", "llogis", "gompertz")
data.Surv <- Surv(datosflex$Tiempo, datosflex$Censura)
modelo_g1 <- sapply(dist, function(x) flexsurvreg(data.Surv ~ 1, dist = x), USE.NAMES = T, simplify = F)
AIC_modelo_g1 <- sapply(modelo_g1, function(x) c(AIC = AIC(x), BIC = BIC(x), LogLik = x$loglik), simplify = T)
AIC = AIC_modelo_g1[, order(AIC_modelo_g1["AIC", ])]
kable(AIC, caption = "Tabla 10: Criterios de información",
col.names = c("Gamma generalizada", "Gompertz", "Log-Logística"))
datosflex <- new_df_cov %>% filter(Grupo_edad == "(30,60]")
data.Surv <- Surv(dataset$Tiempo, dataset$Censura)
modelo_g2 <- sapply(dist, function(x) flexsurvreg(data.Surv ~ 1, dist = x), USE.NAMES = T, simplify = F)
kable(AIC_2, caption = "Criterios de información")
AIC_2 = AIC_modelo_g2[, order(AIC_modelo_g2["AIC", ])]
modelo_g2 <- sapply(dist, function(x) flexsurvreg(data.Surv ~ 1, dist = x), USE.NAMES = T, simplify = F)
modelo_g2 <- sapply(dist, function(x) flexsurvreg(data.Surv ~ 1, dist = x), USE.NAMES = T, simplify = F)
AIC_modelo_g2 <- sapply(modelo_g2, function(x) c(AIC = AIC(x), BIC = BIC(x), LogLik = x$loglik), simplify = T)
AIC_2 = AIC_modelo_g2[, order(AIC_modelo_g2["AIC", ])]
kable(AIC_2, caption = "Criterios de información")
flex_g2 <- flexsurvreg(Surv(t, d) ~ 1, data = datosflex, dist = "GenGamma.orig")
flex_g2 <- flexsurvreg(Surv(Tiempo, Censura) ~ 1, data = dataset, dist = "GenGamma.orig")
f_est_g2 <- 1 - as.data.frame(summary(flex_g2))[, "est"]
km_est_g2 <- survfit(Surv(Tiempo, Censura) ~ 1, dataset)
km_est_g2 <- 1 - km_est_g2$surv
qplot((2/pi) * asin(sqrt(km_est_g2)), (2/pi) * asin(sqrt(f_est_g2))) + labs(x = "F-km-stab",
y = "F-emv-stab", title = "Figura 22: Gráfica de probabilidad estabilizada")
flex_g2 <- flexsurvreg(Surv(t, d) ~ 1, data = datosflex, dist = "GenGamma.orig") %>% summary(type = "survival") %>% data.frame
flex_g2 <- flexsurvreg(Surv(Tiempo, Censura) ~ 1, data = dataset, dist = "GenGamma.orig") %>% summary(type = "survival") %>% data.frame
km_g2 <- survfit(Surv(Tiempo, Censura) ~ 1, data = dataset) %>% fortify
ggplot() + geom_line(aes(time, est, col = "Paramétrico (Gamma generalizada)"), data = flex_g2) + geom_step(aes(time,
surv, col = "No-paramétrico"), data = km_g2) + labs(x = "Tiempo (Días)",
y = "Probabilidad de Supervivencia", col = "Ajustes",
title = "Figura 23: Estimación paramétrica y no-paramétrica de la curva de supervivencia",
subtitle = "Pacientes de entre 30 y 60 años")
ggplot() + geom_line(aes(time, -log(est), col = "Paramétrico (Gamma generalizada)"), data = flex_g2) +
geom_step(aes(time, -log(surv), col = "No-paramétrico"), data = km_g2) +
labs(x = "Tiempo (Días)", y = "Riesgo Acumulado", col = "Ajustes",
title = "Figura 24: Estimación paramétrica y no-paramétrica de la función de riesgo acumulado",
subtitle = "Pacientes de entre 30 y 60 años")
datosflex <- dataset %>% filter(Grupo_edad == "(60,90]")
dist <- c("GenGamma.orig", "llogis", "gompertz")
data.Surv <- Surv(datosflex$t, datosflex$d)
datosflex <- dataset %>% filter(Grupo_edad == "(60,90]")
dist <- c("GenGamma.orig", "llogis", "gompertz")
data.Surv <- Surv(dataset$Tiempo, dataset$Censura)
modelo_g3 <- sapply(dist, function(x) flexsurvreg(data.Surv ~ 1, dist = x), USE.NAMES = T, simplify = F)
AIC_modelo_g3 <- sapply(modelo_g3, function(x) c(AIC = AIC(x), BIC = BIC(x), LogLik = x$loglik), simplify = T)
AIC_3 = AIC_modelo_g3[, order(AIC_modelo_g3["AIC", ])]
kable(AIC_3)
datosflex <- dataset %>% filter(Grupo_edad == "(60,90]")
dist <- c("GenGamma.orig", "llogis", "gompertz")
data.Surv <- Surv(dataset$Tiempo, dataset$Censura)
modelo_g3 <- sapply(dist, function(x) flexsurvreg(data.Surv ~ 1, dist = x), USE.NAMES = T, simplify = F)
AIC_modelo_g3 <- sapply(modelo_g3, function(x) c(AIC = AIC(x), BIC = BIC(x), LogLik = x$loglik), simplify = T)
AIC_3 = AIC_modelo_g3[, order(AIC_modelo_g3["AIC", ])]
kable(AIC_3, col.names = c("Gamma generalizada", "Gompertz", "Log-logística"),
caption = "Tabla 12: Criterios de información")
flex_g3 <- flexsurvreg(Surv(Tiempo, Censura) ~ 1, data = dataset, dist = "GenGamma.orig")
f_est_g3 <- 1 - as.data.frame(summary(flex_g3))[, "est"]
km_est_g3 <- survfit(Surv(t, d) ~ 1, datosflex)
flex_g3 <- flexsurvreg(Surv(Tiempo, Censura) ~ 1, data = dataset, dist = "GenGamma.orig")
f_est_g3 <- 1 - as.data.frame(summary(flex_g3))[, "est"]
km_est_g3 <- survfit(Surv(Tiempo, Censura) ~ 1, dataset)
km_est_g3 <- 1 - km_est_g3$surv
qplot((2/pi) * asin(sqrt(km_est_g3)), (2/pi) * asin(sqrt(f_est_g3))) + labs(x = "F-km-stab",
y = "F-emv-stab", title="Figura 25: Gráfica de probabilidad estabilizada")
datosflex <- dataset %>% filter(Grupo_edad == "(30,60]")
dist <- c("GenGamma.orig", "llogis", "gompertz")
data.Surv <- Surv(dataset$Tiempo, dataset$Censura)
modelo_g2 <- sapply(dist, function(x) flexsurvreg(data.Surv ~ 1, dist = x), USE.NAMES = T, simplify = F)
modelo_g2 <- sapply(dist, function(x) flexsurvreg(data.Surv ~ 1, dist = x), USE.NAMES = T, simplify = F)
AIC_modelo_g2 <- sapply(modelo_g2, function(x) c(AIC = AIC(x), BIC = BIC(x), LogLik = x$loglik), simplify = T)
AIC_2 = AIC_modelo_g2[, order(AIC_modelo_g2["AIC", ])]
kable(AIC_2, caption = "Criterios de información", col.names = "Tabla 11: Gamma generalizada", "Gompertz", "Log-logística")
kable(AIC_2, caption = "Tabla 11: Criterios de información", col.names = c("Gamma generalizada", "Gompertz", "Log-logística"))
datosflex <- new_df_covariables
dist <- c("weibull", "lnorm", "GenGamma.orig", "llogis", "gompertz")
data.Surv <- Surv(dataset$Tiempo, dataset$Censura)
modelo_general <- sapply(dist, function(x) flexsurvreg(data.Surv ~ 1, dist = x), USE.NAMES = T, simplify = F)
plot(modelo_general[[1]], ci = F, conf.int = F, lty = 2,
main = "Figura 28: ajuste Paramétrico",
xlab = "Tiempo", ylab = "Probabilidad de Supervivencia")
for (i in 2:length(dist)) plot(modelo_general[[i]], ci = F, conf.int = F, add = T, col = i + 1, lty = i)
legend("topright", c("Kaplan-Meier", "Weibull", "Log-Normal","Gamma generalizada",
"Log-logística", "Gompertz"), lty = 1:(length(dist) + 1), col = 1:(length(dist) + 1))
kable(IC_model, caption = , col.names = )
data_surv <- Surv(dataset$Tiempo, dataset$Censura)
modelo <- sapply(dist,
function(x) flexsurvreg(data_surv ~ 1, data = datosflex, dist = x),
USE.NAMES = T, simplify = F)
modelo <- sapply(dist,
function(x) flexsurvreg(data_surv ~ 1, data = datosflex, dist = x),
USE.NAMES = T, simplify = F)
IC_model <- sapply(modelo, function(x) c(AIC = AIC(x), BIC = BIC(x), LogLik = logLik(x)), simplify = T)
IC_model[, order(IC_model["AIC", ])]
flex_gamma <- flexsurvreg(Surv(Tiempo, Censura) ~ 1, data = dataset, dist = "GenGamma.orig")
F_est_gamma <- 1 - as.data.frame(summary(flex_gamma))[, "est"]
km_est <- survfit(Surv(t, d) ~ 1, new_df_covariables)
cox_model <- coxph(Surv(Tiempo, Censura) ~ Edad, data = dataset)
summary(cox_model)
cox_model <- coxph(Surv(Tiempo, Censura) ~ Edad , data = dataset)
datosnuevos <- data.frame(Edad = c(20, 40, 60))
curva_sup <- survfit(cox_model, newdata = datosnuevos, conf.type="log-log")
print(curva_sup, print.rmean = T)
