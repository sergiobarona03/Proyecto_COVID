file.choose()
setwd("D:/Desktop/Proyecto_COVID")
library(here)
source(here::here("Script/Script_subsets", "000_librerias.R"))
# Nota: por simplicidad, recurro a la base de datos de la fecha final
larger_dataset = readRDS(here::here("Resultados/04.01.23", "larger_dataset.RDS"))
library(here)
source(here::here("Script/Script_subsets", "300_final_data.R"))
library(here)
source(here::here("Script/Script_subsets", "110_recodificar.R"))
# Definición de las rutas para los subconjuntos de datos
destfile = vector()
n = 6   #número de subconjuntos
for (j in 1:n)
for (j in 1:n)
{
destfile [[j]] =paste0(
"Subsets\\dataframe_subset_",
j,".csv")
}
# Cargar los subconjuntos de datos
df_subset_1 = read.csv(destfile[1])
library(here)
source(here::here("Script/Script_subsets", "100_subsets.R"))
library(here)
source(here::here("Script/Script_subsets", "110_recodificar.R"))
library(here)
source(here::here("Script/Script_subsets", "200_input.R"))
library(here)
source(here::here("Script/Script_subsets", "300_final_data.R"))
View(final_df_z)
write.csv(final_df_z,
"Resultados/04.01.23/final_data_040123.csv",
row.names = FALSE)
# Nota: por simplicidad, recurro a la base de datos de la fecha final
larger_dataset = readRDS(here::here("Resultados/04.01.23", "larger_dataset.RDS"))
# larger_dataset
larger_dataset = funcion_w_n(larger_dataset)
library(here)
source(here::here("Script/Script_subsets", "110_recodificar.R"))
funcion_w_n = function(a){
dataset_0 = data.frame()
colnames(a) <- c("Fecha_reporte", "Caso", "Not", "Cod_Dep", "Nom_Dep", "Cod_Mun",
"Nom_Mun", "Edad", "Unidad", "Sexo", "Fuente", "Ubic", "Estado",
"Pais_cod", "Pais_nom", "Dic_Recup",
"Inicio", "Muerte", "Diagnos", "Recup", "Tipo", "Pert_Etn", "Nom_Etn")
a <- a[,-1]
a$Caso = as.character(a$Caso)
a$Caso = as.numeric(gsub(",", ".", a$Caso))
a$Sexo <- as.factor(a$Sexo)
a$Cod_Mun <- as.numeric(a$Cod_Mun)
a$Fuente <- as.factor(a$Fuente)
a$Ubic <- as.factor(a$Ubic)
a$Ubic <- as.character(a$Ubic)
a$Pais_nom <- as.character(a$Pais_nom)
a$Estado <- as.factor(a$Estado)
a$Fuente <- revalue(a$Fuente, c("EN ESTUDIO" = "En estudio",
"Relacionado" = "Relacionado"))
a$Estado <- revalue(a$Estado, c("Asintomático = Asintomático", "Fallecido" = "Fallecido",
"Grave" = "Grave", "Leve" = "Leve", "Moderado" = "Moderado",
"N/A" = NA))
a <- a[order(a$Caso),]
a <- a[a$Cod_Mun == 76001, ]
dataset_0 = a
return(dataset_0)
}
# larger_dataset
larger_dataset = funcion_w_n(larger_dataset)
library(here)
source(here::here("Script/Script_subsets", "300_final_data.R"))
library(here)
source(here::here("Script/Script_subsets", "000_librerias.R"))
library(here)
source(here::here("Script/Script_subsets", "100_subsets.R"))
library(here)
source(here::here("Script/Script_subsets", "300_final_data.R"))
library(here)
source(here::here("Script/Script_subsets", "200_input.R"))
library(here)
source(here::here("Script/Script_subsets", "300_final_data.R"))
library(here)
source(here::here("Script/Script_subsets", "300_final_data.R"))
library(here)
source(here::here("Script/Script_subsets", "300_final_data.R"))
getwd(ç)
getwd()
library(here)
source(here::here("Script/Script_subsets", "110_recodificar.R"))
library(here)
source(here::here("Script/Script_subsets", "100_subsets.R"))
library(here)
source(here::here("Script/Script_subsets", "000_librerias.R"))
library(here)
source(here::here("Script/Script_subsets", "100_subsets.R"))
library(here)
source(here::here("Script/Script_subsets", "110_recodificar.R"))
library(here)
source(here::here("Script/Script_subsets", "110_recodificar.R"))
funcion_w_n = function(a){
dataset_0 = data.frame()
colnames(a) <- c("Fecha_reporte", "Caso", "Not", "Cod_Dep", "Nom_Dep", "Cod_Mun",
"Nom_Mun", "Edad", "Unidad", "Sexo", "Fuente", "Ubic", "Estado",
"Pais_cod", "Pais_nom", "Dic_Recup",
"Inicio", "Muerte", "Diagnos", "Recup", "Tipo", "Pert_Etn", "Nom_Etn")
a <- a[,-1]
a$Caso = as.character(a$Caso)
a$Caso = as.numeric(gsub(",", ".", a$Caso))
a$Sexo <- as.factor(a$Sexo)
a$Cod_Mun <- as.numeric(a$Cod_Mun)
a$Fuente <- as.factor(a$Fuente)
a$Ubic <- as.factor(a$Ubic)
a$Ubic <- as.character(a$Ubic)
a$Pais_nom <- as.character(a$Pais_nom)
a$Estado <- as.factor(a$Estado)
a$Fuente <- revalue(a$Fuente, c("EN ESTUDIO" = "En estudio",
"Relacionado" = "Relacionado"))
a$Estado <- revalue(a$Estado, c("Asintomático = Asintomático", "Fallecido" = "Fallecido",
"Grave" = "Grave", "Leve" = "Leve", "Moderado" = "Moderado",
"N/A" = NA))
a <- a[order(a$Caso),]
a <- a[a$Cod_Mun == 76001, ]
dataset_0 = a
return(dataset_0)
}
library(here)
source(here::here("Script/Script_subsets", "200_input.R"))
final_df = data.frame(Caso = input$Caso,
t_0 = rep(NA,nrow(input)),
t_T = rep(NA,nrow(input)),
t = rep(NA, nrow(input)),
d = rep(NA,nrow(input)))
final_df$t_0 = ymd(final_df$t_0)
final_df$t_T = ymd(final_df$t_T)
# Extrarer t_0, t_T e información de censura
for (i in 1:nrow(input)) {
print(i)
# seleccionar subset del caso
df_1 = input[i,]
#número de fila para el caso
x = which(final_df$Caso == as.numeric(df_1$Caso))
# trasponer datos
df_1_t = df_1[,-1]  %>% as.matrix()  %>% t()
colnames(df_1_t) = "Date"
df_1_t = as.data.frame(df_1_t)
# llenar la información para el caso x
final_df$t_0[x] = min(df_1_t$Date, na.rm = T)
final_df$t_T[x] = max(df_1_t$Date, na.rm = T)
# si min = max, entonces permanece en UCI
if (final_df$t_0[x] == final_df$t_T[x]) {
final_df$t_T[x] = NA
}
######################################################
## Llenar la información para la variable censurada ##
######################################################
# los datos censurados corresponden a censura por derecha
# eliminar filas NA y no considerar Hospital_UCI
df_2 = df_1_t
df_2$Ubic = rownames(df_2)
df_2 = df_2 %>% filter(Ubic != "Hospital_UCI")
df_2 = na.omit(df_2)
if ({"NO_COVID" %in% df_2$Ubic} || nrow(df_2) == 0) {
final_df$d[x] = 0
} else {
final_df$d[x] = 1
}
}
# Extrarer t (diferencia entre t_T y t_0). Fin de muestra = 2021-11-30
for (j in 1:nrow(final_df)) {
print(j)
# cambiar NA por el fin de la muestra
if (is.na(final_df$t_T[j])) {
final_df$t_T[j] = ymd("2021-11-30")
}
# calcular t (t_T - t_0)
final_df$t[j] = difftime(final_df$t_T[j],final_df$t_0[j], units = "days")
}
# Forma final de la base de datos
final_df_z = final_df[c("Caso", "t", "d")]
write.csv(final_df_z,
"Resultados/04.01.23/final_data_040123.csv",
row.names = FALSE)
# Nota: por simplicidad, recurro a la base de datos de la fecha final
larger_dataset = readRDS(here::here("Resultados/04.01.23", "larger_dataset.RDS"))
# larger_dataset
larger_dataset = funcion_w_n(larger_dataset)
View(funcion_w_n)
funcion_w_n = function(a){
dataset_0 = data.frame()
colnames(a) <- c("Fecha_reporte", "Caso", "Not", "Cod_Dep", "Nom_Dep", "Cod_Mun",
"Nom_Mun", "Edad", "Unidad", "Sexo", "Fuente", "Ubic", "Estado",
"Pais_cod", "Pais_nom", "Dic_Recup",
"Inicio", "Muerte", "Diagnos", "Recup", "Tipo", "Pert_Etn", "Nom_Etn")
a <- a[,-1]
a$Caso = as.character(a$Caso)
a$Caso = as.numeric(gsub(",", ".", a$Caso))
a$Sexo <- as.factor(a$Sexo)
a$Cod_Mun <- as.numeric(a$Cod_Mun)
a$Fuente <- as.factor(a$Fuente)
a$Ubic <- as.factor(a$Ubic)
a$Ubic <- as.character(a$Ubic)
a$Pais_nom <- as.character(a$Pais_nom)
a$Estado <- as.factor(a$Estado)
a$Fuente <- revalue(a$Fuente, c("EN ESTUDIO" = "En estudio",
"Relacionado" = "Relacionado"))
a$Estado <- revalue(a$Estado, c("Asintomático = Asintomático", "Fallecido" = "Fallecido",
"Grave" = "Grave", "Leve" = "Leve", "Moderado" = "Moderado",
"N/A" = NA))
a <- a[order(a$Caso),]
a <- a[a$Cod_Mun == 76001, ]
dataset_0 = a
return(dataset_0)
}
# Nota: por simplicidad, recurro a la base de datos de la fecha final
larger_dataset = funcion_w_n(readRDS(here::here("Resultados/04.01.23", "larger_dataset.RDS")))
dataset_0 = data.frame()
function (x, value)
Q
dataset_0 = data.frame()
colnames(a) <- c("Fecha_reporte", "Caso", "Not", "Cod_Dep", "Nom_Dep", "Cod_Mun",
"Nom_Mun", "Edad", "Unidad", "Sexo", "Fuente", "Ubic", "Estado",
"Pais_cod", "Pais_nom", "Dic_Recup",
"Inicio", "Muerte", "Diagnos", "Recup", "Tipo", "Pert_Etn", "Nom_Etn")
a = NA
dataset_0 = data.frame()
colnames(a) <- c("Fecha_reporte", "Caso", "Not", "Cod_Dep", "Nom_Dep", "Cod_Mun",
"Nom_Mun", "Edad", "Unidad", "Sexo", "Fuente", "Ubic", "Estado",
"Pais_cod", "Pais_nom", "Dic_Recup",
"Inicio", "Muerte", "Diagnos", "Recup", "Tipo", "Pert_Etn", "Nom_Etn")
# Nota: por simplicidad, recurro a la base de datos de la fecha final
larger_dataset = readRDS(here::here("Resultados/04.01.23", "larger_dataset.RDS"))
a  = larger_dataset
dataset_0 = data.frame()
colnames(a) <- c("Fecha_reporte", "Caso", "Not", "Cod_Dep", "Nom_Dep", "Cod_Mun",
"Nom_Mun", "Edad", "Unidad", "Sexo", "Fuente", "Ubic", "Estado",
"Pais_cod", "Pais_nom", "Dic_Recup",
"Inicio", "Muerte", "Diagnos", "Recup", "Tipo", "Pert_Etn", "Nom_Etn")
a <- a[,-1]
library(here)
source(here::here("Script/Script_subsets", "300_final_data.R"))
here::here("Script/Script_subsets", "300_final_data.R")
library(here)
source(here::here("Script/Script_subsets", "200_input.R"))
library(here)
source(here::here("Script/Script_subsets", "110_recodificar.R"))
library(here)
source(here::here("Script/Script_subsets", "100_subsets.R"))
source(here::here("Script/Script_subsets", "000_librerias.R"))
source(here::here("Script/Script_subsets", "100_subsets.R"))
# remover
rm(dataset, subset_uci, subset_uci_na, aux_0, cas, hos, fal, uci, rec, noc, df_subset_6,
df_subset_5, df_subset_4, df_subset_3, df_subset_2, df_subset_1)
library(here)
source(here::here("Script/Script_subsets", "000_librerias.R"))
source(here::here("Script/Script_subsets", "100_subsets.R"))
source(here::here("Script/Script_subsets", "000_librerias.R"))
source(here::here("Script/Script_subsets", "100_subsets.R"))
# remover
rm(dataset, subset_uci, subset_uci_na, aux_0, cas, hos, fal, uci, rec, noc, df_subset_6,
df_subset_5, df_subset_4, df_subset_3, df_subset_2, df_subset_1, j, k, n, destfile)
library(here)
source(here::here("Script/Script_subsets", "000_librerias.R"))
source(here::here("Script/Script_subsets", "100_subsets.R"))
# remover
rm(dataset, subset_uci, subset_uci_na, aux_0, cas, hos, fal, uci, rec, noc,
df_subset_6, df_subset_5, df_subset_4,
df_subset_3, df_subset_2, df_subset_1, j, k, n, destfile)
library(here)
source(here::here("Script/Script_subsets", "000_librerias.R"))
source(here::here("Script/Script_subsets", "100_subsets.R"))
help(source)
library(here)
source(here::here("Script/Script_subsets", "000_librerias.R"))
source(here::here("Script/Script_subsets", "100_subsets.R"))
# Definición de las rutas para los subconjuntos de datos
destfile = vector()
n = 6   #número de subconjuntos
for (j in 1:n)
{
destfile [[j]] =paste0(
"Subsets\\dataframe_subset_",
j,".csv")
}
# Cargar los subconjuntos de datos
df_subset_1 = read.csv(destfile[1])
df_subset_2 = read.csv(destfile[2])
df_subset_3 = read.csv(destfile[3])
df_subset_4 = read.csv(destfile[4])
df_subset_5 = read.csv(destfile[5])
df_subset_6 = read.csv(destfile[length(destfile)])
# Definir una familia de subconjuntos de datos
aux_0 = list(df_subset_1, df_subset_2, df_subset_3, df_subset_4, df_subset_5,
df_subset_6)
# Recodificar los nombres de las variables para los subconjuntos 2-6
for (k in 2:length(aux_0)) {
colnames(aux_0[[k]]) = c("Caso",
paste0("c_",9+k),
paste0("h_",9+k),
paste0("f_",9+k),
paste0("u_",9+k),
paste("r_",9+k),
paste("n_",9+k))
}
# Recodificar base de datos extensa (subset 1)
cas = vector(length = 10)
hos =vector(length = 10)
fal =vector(length = 10)
uci =vector(length = 10)
rec =vector(length = 10)
noc =vector(length = 10)
for (j in 1:10) {
cas[j] = paste0("c_",j)
hos[j] = paste0("h_",j)
fal[j] = paste0("f_",j)
uci[j] = paste0("u_",j)
rec[j] = paste0("r_",j)
noc[j] = paste0("n_",j)
}
colnames(aux_0[[1]]) = c("Caso", cas,
hos, fal, uci, rec, noc)
# merge completo entre los subsets
dataset = merge(aux_0[[6]], aux_0[[5]], by = "Caso", all.x = TRUE)
dataset = merge(dataset, aux_0[[4]], by = "Caso", all.x = TRUE)
dataset = merge(dataset, aux_0[[3]], by = "Caso", all.x = TRUE)
dataset = merge(dataset, aux_0[[2]], by = "Caso", all.x = TRUE)
dataset = merge(dataset, aux_0[[1]], by = "Caso", all.x = TRUE)
# restricción para extraer pacientes en UCI
# procedimiento: se mantienen todas las filas en las cuales existe al menos un U_i no vacío
subset_uci = dataset[c("Caso", uci, "u_11",
"u_12", "u_13",
"u_14", "u_15")]
subset_uci_na = subset_uci[rowSums(is.na(subset_uci[,2:ncol(subset_uci)])) != ncol(subset_uci[,2:ncol(subset_uci)]), ]
dataset_na = dataset %>% filter(Caso %in% subset_uci_na$Caso)
# remover
rm(dataset, subset_uci, subset_uci_na, aux_0, cas, hos, fal, uci, rec, noc,
df_subset_6, df_subset_5, df_subset_4,
df_subset_3, df_subset_2, df_subset_1, j, k, n, destfile)
library(here)
source(here::here("Script/Script_subsets", "000_librerias.R"))
source(here::here("Script/Script_subsets", "100_subsets.R"))
library(here)
source(here::here("Script/Script_subsets", "000_librerias.R"))
source(here::here("Script/Script_subsets", "100_subsets.R"))
library(here)
source(here::here("Script/Script_subsets", "000_librerias.R"))
source(here::here("Script/Script_subsets", "100_subsets.R"))
source(here::here("Script/Script_subsets", "110_recodificar.R"))
source(here::here("Script/Script_subsets", "200_input.R"))
source(here::here("Script/Script_subsets", "300_final_data.R"))
# Nota A: por simplicidad, recurro a la base de datos de la fecha final
larger_dataset = readRDS(here::here("Resultados/04.01.23", "larger_dataset.RDS"))
# recuperar sexo y edad
cov = large_dataset[c("Caso", "Edad", "Sexo")]
# recuperar sexo y edad
cov = larger_dataset[c("Caso", "Edad", "Sexo")]
final_df_w = merge(final_df_z, larger_dataset, by = "Caso", all.x=T, all.y = F)
View(final_df_w)
final_df_w = merge(final_df_z, cov, by = "Caso", all.x=T, all.y = F)
final_df_w$Sexo = as.factor(as.character(final_df_w$Sexo))
# guardar final data con covariables
write.csv(final_df_w,
"Resultados/04.01.23/final_cov_040123.csv",
row.names = FALSE)
# recodificar el sexo
a$Sexo <- gsub(pattern = "\\s*(f|F)+\\s*",
replacement = "1", a$Sexo)
a$Sexo <- gsub(pattern = "\\s*(m|M)+\\s*",
replacement = "0", a$Sexo)
# recodificar el sexo
final_df_w$Sexo <- gsub(pattern = "\\s*(f|F)+\\s*",
replacement = "1", final_df_w$Sexo)
final_df_w$Sexo <- gsub(pattern = "\\s*(m|M)+\\s*",
replacement = "0", final_df_w$Sexo)
final_df_w$Sexo = as.factor(as.character(final_df_w$Sexo))
# recuperar sexo y edad
cov = larger_dataset[c("Caso", "Edad", "Sexo")]
final_df_w = merge(final_df_z, cov, by = "Caso", all.x=T, all.y = F)
final_df_w$Sexo = as.factor(as.character(final_df_w$Sexo))
# recodificar el sexo
final_df_w$Sexo <- gsub(pattern = "\\s*(f|F)+\\s*",
replacement = "1", final_df_w$Sexo)
final_df_w$Sexo <- gsub(pattern = "\\s*(m|M)+\\s*",
replacement = "0", final_df_w$Sexo)
# guardar final data con covariables
write.csv(final_df_w,
"Resultados/04.01.23/final_cov_040123.csv",
row.names = FALSE)
